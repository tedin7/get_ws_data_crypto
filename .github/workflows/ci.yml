name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  security-events: write

jobs:
  build-test:
    name: build-test (python ${{ matrix.python-version }} â€¢ ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.11']  # Matrix-ready; add more versions if needed
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt

      - name: Validate Git Hygiene (no .env tracked)
        run: |
          set -euo pipefail
          if git ls-files --error-unmatch .env >/dev/null 2>&1; then
            echo ".env file is tracked; remove it from git. Public-only mode forbids secrets." >&2
            exit 1
          fi
          echo "Hygiene check passed."

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -u tests/run_all_tests.py

      - name: Size guard (fail if any tracked file > 5MB)
        run: |
          set -euo pipefail
          max_bytes=$((5 * 1024 * 1024))
          big_files=$(git ls-files -z | xargs -0 -I{} bash -c 'f="{}"; [ -f "$f" ] && [ $(stat -c%s "$f") -gt '"$max_bytes"' ] && echo "$f" || true')
          if [ -n "$big_files" ]; then
            echo "The following tracked files exceed 5MB:"
            echo "$big_files"
            exit 1
          fi
          echo "Size guard check passed."

  secret-scan:
    name: secret-scan (gitleaks)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_REPORT_FORMAT: sarif
          GITLEAKS_REPORT_PATH: gitleaks.sarif

      - name: Upload SARIF
        if: ${{ hashFiles('gitleaks.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif

  pass:
    name: required-status
    runs-on: ubuntu-latest
    needs: [build-test, secret-scan]
    steps:
      - name: All required jobs completed
        run: echo "All checks passed"